# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
#   SERVER: production

name: TerraformPlan

jobs:
  build-and-deploy:
    # defaults:
    #   run:
    #     working-directory: ${{ env.tf_actions_working_dir }}
    # runs-on: ${{ matrix.os }}
    # strategy:
    #     matrix:
    #       os: [windows-latest, ubuntu-latest, macos-latest]
    #       terraform-versions: [0.11.14, latest]
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Get Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Get Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        # enable-AzPSSession: false

    - name: Terraform Plan
      uses: Azure/powershell@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        TF_VAR_backend_storage_container: ${{ secrets.TF_VAR_backend_storage_container }}
        TF_VAR_backend_storage_account: ${{ secrets.TF_VAR_backend_storage_account }}
        TF_VAR_backend_resource_group: ${{ secrets.TF_VAR_backend_resource_group }}
        TF_WORKSPACE: ci
      with:
        inlineScript: | 
          # Parse Azure secret into Terraform variables
          $servicePrincipal = ($env:AZURE_CREDENTIALS | ConvertFrom-Json)
          $env:ARM_CLIENT_ID = $servicePrincipal.clientId
          $env:ARM_CLIENT_SECRET = $servicePrincipal.clientSecret
          $env:ARM_SUBSCRIPTION_ID = $servicePrincipal.subscriptionId
          $env:ARM_TENANT_ID = $servicePrincipal.tenantId
          
          # List environment variables
          Get-ChildItem -Path Env: -Recurse -Include ARM_*,AZURE_*,GITHUB_*,TF_* | Sort-Object -Property Name
          #az account show
          Write-Host $env:AZURE_CREDENTIALS

          Get-Location
          #Get-ChildItem -Path .. -Recurse -Directory -Force
          ./scripts/deploy.ps1 -init -plan
        azPSVersion: latest
        errorActionPreference: Stop
        failOnStandardError: true